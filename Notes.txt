Starting the Project 
    -Compose a back-end app 
    -Use django to serve static HTML content
    -Commit the project to a Git repository 

Users:
testuser - test123! - dcaab7fbfe0499f26758a8b61eb449cb3ceafff1

Views that Did Not Make the Cut But Might Use Later:
    @permission_classes({IsAuthenticated})
    class menuView(APIView):
        def get(self, request):
            items = Menu.objects.all()
            serializer = menuSerializer(items, many=True)
            return Response(serializer.data)
        
        def post(self, request):
            serializer = menuSerializer(data=request.data)
            if serializer.is_valid():
                serializer.save()
                return Response({'status':'success', 'data': serializer.data})

    @permission_classes({IsAuthenticated})
    class SingleMenuItemView(APIView):
        def get(self, request, pk):
            try:
                menu_item = Menu.objects.get(pk=pk)
                serializer = menuSerializer(menu_item)
                return Response(serializer.data)
            except Menu.DoesNotExist:
                return Response(status=status.HTTP_404_NOT_FOUND)

        def put(self, request, pk):
            try:
                menu_item = Menu.objects.get(pk=pk)
                serializer = menuSerializer(menu_item, data=request.data)
                if serializer.is_valid():
                    serializer.save()
                    return Response(serializer.data)
                return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
            except Menu.DoesNotExist:
                return Response(status=status.HTTP_404_NOT_FOUND)

        def delete(self, request, pk):
            try:
                menu_item = Menu.objects.get(pk=pk)
                menu_item.delete()
                return Response(status=status.HTTP_204_NO_CONTENT)
            except Menu.DoesNotExist:
                return Response(status=status.HTTP_404_NOT_FOUND)
